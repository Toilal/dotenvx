name: ci
on:
  push: ~
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x, 17.x ]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache yarn local cache
        uses: actions/cache@v2
        with:
          path: '.yarn/cache'
          key: ${{ runner.os }}-node${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ matrix.node-version }}-yarn-local-cache

      - name: "Upgrade npm"
        run: npm --version && npm install -g npm && npm --version

      - name: "Install Dependencies"
        run: yarn

      - name: "Link"
        run: yarn lint

      - name: "TypeCheck"
        run: yarn typecheck

      - name: "Test"
        run: yarn test

      - name: "Build"
        run: yarn build
  release:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    needs: build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: "Git User config"
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "github-actions"

      - name: Cache yarn local cache
        uses: actions/cache@v2
        with:
          path: '.yarn/cache'
          key: ${{ runner.os }}-node${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ matrix.node-version }}-yarn-local-cache

      - name: "Upgrade npm"
        run: npm install -g npm

      - name: "Install Dependencies"
        run: yarn

      - name: "Build"
        run: yarn build

      - name: "Semantic Release"
        run: yarn semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
